#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ CSV —Ñ–∞–π–ª–æ–≤ –±–∞–Ω–∫–æ–≤
"""

import sys
import os
sys.path.append('.')

from app.database.database import SessionLocal, init_db
from app.services.csv_import import CSVImportService
from app.database.models import User, Transaction
from app.utils.logger import get_logger

logger = get_logger(__name__)


def test_csv_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç CSV —Ñ–∞–π–ª–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ CSV —Ñ–∞–π–ª–æ–≤")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.first_name}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏–º–ø–æ—Ä—Ç–∞
        import_service = CSVImportService(db)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –±–∞–Ω–∫–∞
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –±–∞–Ω–∫–∞...")
        
        # –ß–∏—Ç–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        with open('test_alfabank.csv', 'r', encoding='utf-8') as f:
            alfabank_content = f.read()
        
        with open('test_tbank.csv', 'r', encoding='utf-8') as f:
            tbank_content = f.read()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç
        alfabank_format = import_service.detect_bank_format(alfabank_content)
        tbank_format = import_service.detect_bank_format(tbank_content)
        
        print(f"‚úÖ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫: {alfabank_format}")
        print(f"‚úÖ –¢-–ë–∞–Ω–∫: {tbank_format}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞...")
        alfabank_transactions = import_service.parse_alfabank_csv(alfabank_content)
        print(f"‚úÖ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(alfabank_transactions)}")
        
        for i, trans in enumerate(alfabank_transactions[:3], 1):
            print(f"  {i}. {trans['date'].strftime('%d.%m.%Y')} - {trans['amount']} ‚ÇΩ - {trans['description']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¢-–ë–∞–Ω–∫–∞
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¢-–ë–∞–Ω–∫–∞...")
        tbank_transactions = import_service.parse_tbank_csv(tbank_content)
        print(f"‚úÖ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(tbank_transactions)}")
        
        for i, trans in enumerate(tbank_transactions[:3], 1):
            print(f"  {i}. {trans['date'].strftime('%d.%m.%Y')} - {trans['amount']} ‚ÇΩ - {trans['description']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—é
        print("\nüè∑Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        test_descriptions = [
            "–ü–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ü—Ä–æ–¥—É–∫—Ç—ã",
            "–¢–∞–∫—Å–∏",
            "–†–µ—Å—Ç–æ—Ä–∞–Ω",
            "–ê–ø—Ç–µ–∫–∞",
            "–ó–∞—Ä–ø–ª–∞—Ç–∞"
        ]
        
        for desc in test_descriptions:
            category_id = import_service.categorize_transaction(desc)
            if category_id:
                print(f"‚úÖ '{desc}' -> –∫–∞—Ç–µ–≥–æ—Ä–∏—è ID: {category_id}")
            else:
                print(f"‚ùå '{desc}' -> –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∏–º–ø–æ—Ä—Ç (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î)
        print("\nüì• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_result = import_service.import_transactions(user.id, alfabank_content, 'alfabank')
        
        if test_result['success']:
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω!")
            print(f"   ‚Ä¢ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {test_result['imported']}")
            print(f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {test_result['skipped']}")
            print(f"   ‚Ä¢ –û—à–∏–±–æ–∫: {test_result['errors']}")
            print(f"   ‚Ä¢ –ë–∞–Ω–∫: {test_result['bank']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {test_result['error']}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    finally:
        db.close()


if __name__ == "__main__":
    test_csv_import()
