#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ FinGuard –±–æ—Ç–∞
"""

import os
import signal
import subprocess
import sys


def stop_bot():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ FinGuard –±–æ—Ç–∞...")
    
    try:
        # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å–∫–∞—é—Ç –Ω–∞—à –±–æ—Ç
        result = subprocess.run(
            ['ps', 'aux'], 
            capture_output=True, 
            text=True
        )
        
        if result.returncode == 0:
            lines = result.stdout.split('\n')
            bot_processes = []
            
            for line in lines:
                if 'python' in line and 'app/main.py' in line:
                    parts = line.split()
                    if len(parts) > 1:
                        pid = parts[1]
                        bot_processes.append(pid)
                        print(f"–ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞: PID {pid}")
            
            if bot_processes:
                for pid in bot_processes:
                    try:
                        os.kill(int(pid), signal.SIGTERM)
                        print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å {pid} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    except ProcessLookupError:
                        print(f"‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å {pid} —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}: {e}")
            else:
                print("‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    stop_bot()
